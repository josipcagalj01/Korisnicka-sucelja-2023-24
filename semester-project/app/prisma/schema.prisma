// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_NO_POOLING")
}

model user {
 	id  Int  @id @default(autoincrement())
 	pin String @unique
 	name String
 	surname String
	street String
	house_number String
 	place String
	town String
 	birth_date DateTime @db.Date
 	role_id Int @db.SmallInt
	role role @relation(fields: [role_id], references: [id])
	department_id Int? @db.SmallInt
	department department? @relation(fields: [department_id], references: [id])
  forms form[]
	submissions submission[]
 	email String  @unique
 	username  String  @unique
 	password  String
}

model department {
	id Int @db.SmallInt @id @default(autoincrement())
	name String @unique
	users user[]
	forms form[]
}

model role {
	id Int @db.SmallInt @id @default(autoincrement())
	name String
	users user[]
}

model category {
	id Int @db.SmallInt @id @default(autoincrement())
	name String @unique
	forms form[]
}

model form {
	id Int  @id @default(autoincrement())
	author_id Int 
	author user @relation(fields: [author_id], references: [id])
	department_id Int @db.SmallInt
	department  department @relation(fields: [department_id], references: [id])
	submissions submission[]
	start_time_limited Boolean
	end_time_limited Boolean
	rate_limit_set Boolean
	rate_limit Int? @db.SmallInt
	avalible_from DateTime? @db.Timestamptz @default(now()) 
	avalible_until DateTime? @db.Timestamptz
	title String @unique
	category_id Int @db.SmallInt
	category category @relation(fields: [category_id], references: [id])
	fields Json
	sketch Boolean
	thumbnail_setting String
	thumbnail form_thumbnail? @relation(fields: [thumbnail_id], references: [id])
	thumbnail_id Int? @db.SmallInt 
}

model submission {
	id Int  @id @default(autoincrement())
	user_id Int
	user user @relation(fields: [user_id], references: [id])
	form_id Int
	form form @relation(fields: [form_id], references: [id])
	data Json
	time DateTime @db.Timestamptz
	success Boolean
	seen Boolean
	attachments submission_attachment[]
}

model form_thumbnail {
	id Int @db.SmallInt @id @default(autoincrement())
	name String @unique
	forms form[]
}

model submission_attachment {
	id Int  @id @default(autoincrement())
	submission_id Int
	submission submission @relation(fields: [submission_id], references: [id])
	name String
	field_index Int @db.SmallInt
}